<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ParbatCore</name>
    </assembly>
    <members>
        <member name="T:ParbatCore.Controllers.ComponentCourseController">
            <summary>
            Service for ComponentCourse 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentCourseController.Get(System.Int64)">
            <summary>
            Get ComponentCourse of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of ComponentCourse</returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentCourseController.List">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentCourseController.Update(ParbatCore.Models.ComponentCourse)">
            <summary>
            Update ComponentCourse
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentCourseController.Create(ParbatCore.Models.ComponentCourse)">
            <summary>
            Create a new ComponentCourse
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentCourseController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.ComponentTypeController">
            <summary>
            Service for  Component Type 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentTypeController.Get(System.Int64)">
            <summary>
            Get  Component Type of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of  Component Type</returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentTypeController.List">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentTypeController.Update(ParbatCore.Models.ComponentType)">
            <summary>
            Update  Component Type
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentTypeController.Create(ParbatCore.Models.ComponentType)">
            <summary>
            Create a new  Component Type
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.ComponentTypeController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.CourseController">
            <summary>
            Service for Course 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.CourseController.Get(System.Int64)">
            <summary>
            Get Course of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of Course</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseController.List">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseController.Update(ParbatCore.Models.Course)">
            <summary>
            Update Course
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseController.Create(ParbatCore.Models.Course)">
            <summary>
            Create a new Course
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.CourseTypeController">
            <summary>
            Service for Curriculum Type 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.CourseTypeController.Get(System.Int64)">
            <summary>
            Get Curriculum Type of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of Curriculum Type</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseTypeController.List">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseTypeController.Update(ParbatCore.Models.CourseType)">
            <summary>
            Update Curriculum Type
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseTypeController.Create(ParbatCore.Models.CourseType)">
            <summary>
            Create a new curriculum type
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.CourseTypeController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.CurriculumController">
            <summary>
            Service for Curriculum 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.Get(System.Int64)">
            <summary>
            Get Curriculum of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of Curriculum</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.List">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.GetOwnerUnit(System.Int64)">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.GetCurriculumType(System.Int64)">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.Update(ParbatCore.Models.Curriculum)">
            <summary>
            Update Curriculum
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.Create(ParbatCore.Models.Curriculum)">
            <summary>
            Create a new Curriculum
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.CurriculumTypeController">
            <summary>
            Service for Curriculum Type 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumTypeController.Get(System.Int64)">
            <summary>
            Get Curriculum Type of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of Curriculum Type</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumTypeController.List">
            <summary>
            Return all records
            </summary>
            <param name="izd"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumTypeController.Update(ParbatCore.Models.CurriculumType)">
            <summary>
            Update Curriculum Type
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumTypeController.Create(ParbatCore.Models.CurriculumType)">
            <summary>
            Create a new curriculum type
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.CurriculumTypeController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.OrgUnitController">
            <summary>
            Service for OrgUnit Type 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitController.Get(System.Int64)">
            <summary>
            Get OrgUnit Type of given id
            </summary>
            <param name="id"></param>
            <returns>Return json object of OrgUnit Type</returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitController.GetParent(System.Int64)">
            <summary>
            Get All OrgUnit record against ParentID
            </summary>
            <param name="id"></param>
            <returns>Return json object of OrgUnit Type</returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitController.List">
            <summary>
            Return all records
            </summary>
            <param name="id"></param>
            <returns>Return a DataTable</returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitController.Update(ParbatCore.Models.OrgUnit)">
            <summary>
            Update OrgUnit Type
            </summary>
            <param name="ctype"></param>
            <returns>Returns only http codeds</returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitController.Create(ParbatCore.Models.OrgUnit)">
            <summary>
            Create a new OrgUnit type
            </summary>
            <param name="ctype"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitController.Delete(System.Int64)">
            <summary>
            Delete instance
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.OrgUnitTypeController">
            <summary>
            Service of OrgUnitType
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitTypeController.List">
            <summary>
            Return All the OrgUnitType
            </summary>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitTypeController.Find(System.Int64)">
            <summary>
            Find the OrgUnitType if Exit else NotFound Error 
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitTypeController.Delete(System.Int64)">
            <summary>
            Find the ID if EXITS than Delete it return Record doesnot exit
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitTypeController.Save(ParbatCore.Models.OrgUnitType)">
            <summary>
            Save the new OrgUnit Type if not exit otherwise update it
            </summary>
            <param name="orgType"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.OrgUnitTypeController.Update(ParbatCore.Models.OrgUnitType)">
            <summary>
            Update the Exist OrgUnitType otherwise return the bad request
            </summary>
            <param name="orgType"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.StudentController">
            <summary>
            Controller of Student Business Class
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.StudentController.List">
            <summary>
            Return All students from the Student Class
            </summary>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentController.Find(System.Int64)">
            <summary>
            Find the STD from the Student Class
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentController.Delete(System.Int64)">
            <summary>
            Delete the STD from the Student Class
            </summary>
            <param name="StudentID"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentController.Save(ParbatCore.Models.Student)">
            <summary>
            Add the new STD in the Student Class
            </summary>
            <param name="std"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentController.Update(ParbatCore.Models.Student)">
            <summary>
            Update the STD in the Student Class
            </summary>
            <param name="std"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Controllers.StudentStatusController">
            <summary>
            This is the Control of STD Status Class 
            </summary>
        </member>
        <member name="M:ParbatCore.Controllers.StudentStatusController.List">
            <summary>
            Return the the StudentStatus from the StudentStatus Class
            </summary>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentStatusController.Find(System.Int64)">
            <summary>
            Find the Current StudentStatus from the Studentstatus Class
            </summary>
            <param name="StudentStatusID"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentStatusController.Delete(System.Int64)">
            <summary>
            Delete the StudentSatus from the StudentSatus Class
            </summary>
            <param name="StudentSatusID"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentStatusController.Save(ParbatCore.Models.StudentStatus)">
            <summary>
            Save the StudentSatus in the Student Status Class
            </summary>
            <param name="studentStatus"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Controllers.StudentStatusController.Update(ParbatCore.Models.StudentStatus)">
            <summary>
            Update the studentstatus in the studentstatus class
            </summary>
            <param name="studentStatus"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Models.ComponentCourse">
            <summary>
            ComponentCourse Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.ComponentCourse.ComponentCourseID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.ComponentCourse.ComponentID">
            <summary>
            ComponentCourse Name
            </summary>
        </member>
        <member name="P:ParbatCore.Models.ComponentCourse.CourseID">
            <summary>
            ComponentCourse ShortName
            </summary>
        </member>
        <member name="M:ParbatCore.Models.ComponentCourse.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete ComponentCourse
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.ComponentCourse.Find(Parbat.Data.IDatabase)">
            <summary>
            Find ComponentCourse
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.ComponentCourse.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All ComponentCourse
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.ComponentCourse.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Curruciulum Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.ComponentCourse.Update(Parbat.Data.IDatabase)">
            <summary>
            Update ComponentCourse
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.ComponentType">
            <summary>
            Component Type Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.ComponentType.ComponentTypeID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.ComponentType.Name">
            <summary>
            Component Name
            </summary>
        </member>
        <member name="P:ParbatCore.Models.ComponentType.IsRequired">
            <summary>
            Component IsRequired
            </summary>
        </member>
        <member name="M:ParbatCore.Models.ComponentType.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete Component Type
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.ComponentType.Find(Parbat.Data.IDatabase)">
            <summary>
            Find Component Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.ComponentType.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All Component Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.ComponentType.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Component Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.ComponentType.Update(Parbat.Data.IDatabase)">
            <summary>
            Update Component Type
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.Course">
            <summary>
            Course Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.CourseID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.Name">
            <summary>
            Course Name
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.ShortName">
            <summary>
            Course ShortName
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.OwnerID">
            <summary>
            Course OwnerID
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.TheoryCredit">
            <summary>
            Course TheoryCredit
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.LabCredit">
            <summary>
            Course LabCredit
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.Code">
            <summary>
            Course Code
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Course.CourseTypeID">
            <summary>
            Course CourseTypeID
            </summary>
        </member>
        <member name="M:ParbatCore.Models.Course.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete Course
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.Course.Find(Parbat.Data.IDatabase)">
            <summary>
            Find Course
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Course.GetCourseName(Parbat.Data.IDatabase)">
            <summary>
            Find Course Name
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Course.FindCourseID(Parbat.Data.IDatabase)">
            <summary>
            Find Course ID
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Course.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All Course
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Course.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Curruciulum Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Course.Update(Parbat.Data.IDatabase)">
            <summary>
            Update Course
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.CourseType">
            <summary>
            Course Type Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.CourseType.CourseTypeID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.CourseType.Name">
            <summary>
            Course Name
            </summary>
        </member>
        <member name="M:ParbatCore.Models.CourseType.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete Course type
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.CourseType.Find(Parbat.Data.IDatabase)">
            <summary>
            Find Course Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.CourseType.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All course type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.CourseType.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Course Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.CourseType.Update(Parbat.Data.IDatabase)">
            <summary>
            Update Course Type
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.Curriculum">
            <summary>
            Curriculum Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.CurriculumID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.Name">
            <summary>
            Curriculum Name
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.ShortName">
            <summary>
            Curriculum ShortName
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.OwnerUnitID">
            <summary>
            Curriculum OwnerID
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.TotalCourses">
            <summary>
            Curriculum TotalCourses
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.TotalCreditHrs">
            <summary>
            Curriculum TotalCreditHrs
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.IsLimitCourses">
            <summary>
            Curriculum IsLimitCourses
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.IsLimitCreditHrs">
            <summary>
            Curriculum IsLimitCreditHrs
            </summary>
        </member>
        <member name="P:ParbatCore.Models.Curriculum.CurriculumTypeID">
            <summary>
            Curriculum CurriculumTypeID
            </summary>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete Curriculum
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.Find(Parbat.Data.IDatabase)">
            <summary>
            Find Curriculum
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.ComponentTotalCreditCourse(Parbat.Data.IDatabase)">
            <summary>
            Get Component TotalCreditCourse
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.GetOwnerUnit(Parbat.Data.IDatabase)">
            <summary>
            Get Component TotalCreditCourse
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.GetCurriculumType(Parbat.Data.IDatabase)">
            <summary>
            Get Component TotalCreditCourse
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All Curriculum
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Curruciulum Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Curriculum.Update(Parbat.Data.IDatabase)">
            <summary>
            Update Curriculum
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.CurriculumType">
            <summary>
            Curriculum Type Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.CurriculumType.CurriculumTypeID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.CurriculumType.Name">
            <summary>
            Curriculum Name
            </summary>
        </member>
        <member name="M:ParbatCore.Models.CurriculumType.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete curriculum type
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.CurriculumType.Find(Parbat.Data.IDatabase)">
            <summary>
            Find Curriculum Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.CurriculumType.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All curriculum type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.CurriculumType.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Curruciulum Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.CurriculumType.Update(Parbat.Data.IDatabase)">
            <summary>
            Update Curriculum Type
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.IBussinesObject">
            <summary>
            All business object should implement this interface
            </summary>
        </member>
        <member name="M:ParbatCore.Models.IBussinesObject.Save(Parbat.Data.IDatabase)">
            <summary>
            Save the current instances
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.IBussinesObject.Find(Parbat.Data.IDatabase)">
            <summary>
            Find on the basis of current instances
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.IBussinesObject.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete current instances
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.IBussinesObject.Update(Parbat.Data.IDatabase)">
            <summary>
            Update current instance
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.IBussinesObject.GetAll(Parbat.Data.IDatabase)">
            <summary>
            return all records
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Models.OrgUnit">
            <summary>
            OrgUnit Table
            </summary>
        </member>
        <member name="P:ParbatCore.Models.OrgUnit.OrgUnitID">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ParbatCore.Models.OrgUnit.OrgUnitTypeID">
            <summary>
            Forign Key of OrgUnitTypeID
            </summary>
        </member>
        <member name="P:ParbatCore.Models.OrgUnit.Name">
            <summary>
            OrgUnit Name
            </summary>
        </member>
        <member name="P:ParbatCore.Models.OrgUnit.ShortName">
            <summary>
            OrgUnit ShortName
            </summary>
        </member>
        <member name="P:ParbatCore.Models.OrgUnit.ParentUnitID">
            <summary>
            OrgUnit ParentID
            </summary>
        </member>
        <member name="P:ParbatCore.Models.OrgUnit.IsAllowAdmission">
            <summary>
            OrgUnit Name
            </summary>
        </member>
        <member name="M:ParbatCore.Models.OrgUnit.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete OrgUnit
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.OrgUnit.Find(Parbat.Data.IDatabase)">
            <summary>
            Find OrgUnit
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.OrgUnit.FindParent(Parbat.Data.IDatabase)">
            <summary>
            Find OrgUnit against ParentUnitID
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.OrgUnit.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All OrgUnit
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.OrgUnit.Save(Parbat.Data.IDatabase)">
            <summary>
            Save Curruciulum Type
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.OrgUnit.Update(Parbat.Data.IDatabase)">
            <summary>
            Update OrgUnit
            </summary>
            <param name="db"></param>
        </member>
        <member name="T:ParbatCore.Models.OrgUnitType">
            <summary>
            Busniess class of OrgUnitType
            </summary>
        </member>
        <member name="F:ParbatCore.Models.OrgUnitType.OrgUnitTypeID">
            <summary>
            This is the primary key
            </summary>
        </member>
        <member name="F:ParbatCore.Models.OrgUnitType.ShortName">
            <summary>
            ShortName  of OrgUnitType
            </summary>
        </member>
        <member name="F:ParbatCore.Models.OrgUnitType.Name">
            <summary>
            FullName of OrgUnitType
            </summary>
        </member>
        <member name="M:ParbatCore.Models.OrgUnitType.Save(Parbat.Data.IDatabase)">
            <summary>
            To save the New OrgUnitType or If Exit than Update it
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.OrgUnitType.Find(Parbat.Data.IDatabase)">
            <summary>
            For finding some OrgUnitType 
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.OrgUnitType.Delete(Parbat.Data.IDatabase)">
            <summary>
            For deleting the Exit OrgUnitType
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.OrgUnitType.Update(Parbat.Data.IDatabase)">
            <summary>
            Update the OrgUnitType 
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.OrgUnitType.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get the all OrgUnitType
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Models.Student">
            <summary>
            Business Class of Student
            </summary>
        </member>
        <member name="F:ParbatCore.Models.Student.StudentID">
            <summary>
            This is the Primary key of the Sdt table
            </summary>
        </member>
        <member name="F:ParbatCore.Models.Student.Identifier">
            <summary>
            Std Identity
            </summary>
        </member>
        <member name="F:ParbatCore.Models.Student.FirstName">
            <summary>
            First Name of the student
            </summary>
        </member>
        <member name="F:ParbatCore.Models.Student.LastName">
            <summary>
            Last Name of the student
            </summary>
        </member>
        <member name="M:ParbatCore.Models.Student.Save(Parbat.Data.IDatabase)">
            <summary>
            Save the New Std if not exist, else update it
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Student.Find(Parbat.Data.IDatabase)">
            <summary>
            Find the exist std from Student table
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.Student.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete the STD from Student Table if exist
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.Student.Update(Parbat.Data.IDatabase)">
            <summary>
            Update the std id exist 
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.Student.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All the STD from Student Table
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="T:ParbatCore.Models.StudentStatus">
            <summary>
            This is the Student Status Business Class 
            </summary>
        </member>
        <member name="F:ParbatCore.Models.StudentStatus.StudentStatusID">
            <summary>
            This is the primary key in the StudentStatus Table
            </summary>
        </member>
        <member name="F:ParbatCore.Models.StudentStatus.Name">
            <summary>
            Name Attribute in the StudentStatus Table
            </summary>
        </member>
        <member name="M:ParbatCore.Models.StudentStatus.Delete(Parbat.Data.IDatabase)">
            <summary>
            Delete the exist STDstaus from the StudentStatus table
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:ParbatCore.Models.StudentStatus.Find(Parbat.Data.IDatabase)">
            <summary>
            Find the STD from the StudentStatus Class
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.StudentStatus.GetAll(Parbat.Data.IDatabase)">
            <summary>
            Get All the STD from the StudentStatus Table
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.StudentStatus.Save(Parbat.Data.IDatabase)">
            <summary>
            Save the StudentStatus in the StudentStatus Table
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:ParbatCore.Models.StudentStatus.Update(Parbat.Data.IDatabase)">
            <summary>
            Update the StudentStatus in the StudentStatus Table
            </summary>
            <param name="db"></param>
        </member>
    </members>
</doc>
